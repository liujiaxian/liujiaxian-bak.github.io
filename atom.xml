<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>先修客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.pqpqpq.cn/"/>
  <updated>2016-08-07T09:13:40.425Z</updated>
  <id>http://blog.pqpqpq.cn/</id>
  
  <author>
    <name>先修客</name>
    <email>liujiaxioo@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>a标签或者js提交表单</title>
    <link href="http://blog.pqpqpq.cn/formsubmit/"/>
    <id>http://blog.pqpqpq.cn/formsubmit/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T09:13:40.425Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><blockquote>
<p>通过网上查找资料发现跟自己写的没有什么区别，但是就是没有效果。</p>
</blockquote>
<h3 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;javascript&gt;</span><br><span class="line">function addressadd()</span><br><span class="line">&#123;</span><br><span class="line">        document.formAddress.submit(); //formAddress是上面表单的ID</span><br><span class="line">&#125;</span><br><span class="line">&lt;/javascript&gt;</span><br></pre></td></tr></table></figure>
<h3 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;javascript:document:form.submit();&quot;&gt;[url=]提交[/url]&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h3 id="案例3"><a href="#案例3" class="headerlink" title="案例3"></a>案例3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&apos;javascript:document.form1.submit();&apos;&gt;&lt;font color=&apos;#000000&apos;&gt;首页&lt;/font&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>总之，亲测都没有用。</p>
</blockquote>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;javascript:document.forms[0].submit();&quot;&gt;确认&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;通过网上查找资料发现跟自己写的没有什么区别，但是就是没有效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=
    
    </summary>
    
      <category term="前端" scheme="http://blog.pqpqpq.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="a标签" scheme="http://blog.pqpqpq.cn/tags/a%E6%A0%87%E7%AD%BE/"/>
    
      <category term="js" scheme="http://blog.pqpqpq.cn/tags/js/"/>
    
      <category term="提交表单" scheme="http://blog.pqpqpq.cn/tags/%E6%8F%90%E4%BA%A4%E8%A1%A8%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>异步分页加载数据</title>
    <link href="http://blog.pqpqpq.cn/ajaxpagedata/"/>
    <id>http://blog.pqpqpq.cn/ajaxpagedata/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T09:50:39.754Z</updated>
    
    <content type="html"><![CDATA[<h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">  &lt;dt class=&quot;cl&quot; id=&quot;addcontact&quot;&gt;&lt;/dt&gt;</span><br><span class="line">  &lt;div id=&quot;Pagination1&quot; class=&quot;scott&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>
<h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt; </span><br><span class="line">        //我的留言</span><br><span class="line">        var pid=&apos;&lt;%=Request[&quot;ID&quot;] %&gt;&apos;;</span><br><span class="line">        var m;</span><br><span class="line">        var pageIndex = 0;     //页面索引初始值   </span><br><span class="line">        var pageSize = 5;     //每页显示条数初始化，修改显示条数，修改这里即可   </span><br><span class="line">        $(function () &#123;</span><br><span class="line">            InitTable(0);    //Load事件，初始化表格数据，页面索引为0（第一页）</span><br><span class="line">            //分页，PageCount是总条目数，这是必选参数，其它参数都是可选</span><br><span class="line">            $(&quot;#Pagination1&quot;).pagination(&lt;%=ccount%&gt;, &#123;</span><br><span class="line">                  callback: PageCallback,  //PageCallback() 为翻页调用次函数。</span><br><span class="line">                  prev_text: &quot;« 上一页&quot;,</span><br><span class="line">                  next_text: &quot;下一页 »&quot;,</span><br><span class="line">                  items_per_page:pageSize,</span><br><span class="line">                  num_edge_entries: 2,       //两侧首尾分页条目数</span><br><span class="line">                  num_display_entries: 6,    //连续分页主体部分分页条目数</span><br><span class="line">                  current_page: pageIndex,   //当前页索引                      </span><br><span class="line">              &#125;);</span><br><span class="line">             //翻页调用   </span><br><span class="line">              function PageCallback(index, jq) &#123;   </span><br><span class="line">              m=true;         </span><br><span class="line">                  InitTable(index);  </span><br><span class="line">              &#125;  </span><br><span class="line">             //请求数据   </span><br><span class="line">              function InitTable(pageIndex) &#123;                                  </span><br><span class="line">                  $.ajax(&#123;   </span><br><span class="line">                      type: &quot;POST&quot;,  </span><br><span class="line">                      dataType: &quot;text&quot;,  </span><br><span class="line">                      url: &apos;/gerenzhongxin/pagehelper.ashx?action=contact&amp;id=&apos;+pid,      //提交到一般处理程序请求数据   </span><br><span class="line">                      data: &quot;pageIndex=&quot; + (pageIndex+1) + &quot;&amp;pageSize=&quot; + pageSize,          //提交两个参数：pageIndex(页面索引)，pageSize(显示条数)                   </span><br><span class="line">                      success: function(data) &#123;</span><br><span class="line">                          $(&quot;.delcontact&quot;).remove();                             </span><br><span class="line">                          //$(&quot;#Result&quot;).remove(); </span><br><span class="line">                          //移除Id为Result的表格里的行，从第二行开始（这里根据页面布局不同页变）   </span><br><span class="line">                          $(&quot;#addcontact&quot;).after(data);</span><br><span class="line"></span><br><span class="line">                          if (m) &#123;</span><br><span class="line">                            $(&quot;#addcontact&quot;).parent().show();     </span><br><span class="line">                                &#125;</span><br><span class="line">                          //将返回的数据追加到表格   </span><br><span class="line">                      &#125;   </span><br><span class="line">                  &#125;); </span><br><span class="line">              &#125;</span><br><span class="line">         &#125;); </span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="C-代码-一般处理程序"><a href="#C-代码-一般处理程序" class="headerlink" title="C#代码 (一般处理程序)"></a>C#代码 (一般处理程序)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">public void ProcessRequest(HttpContext context)</span><br><span class="line">&#123;</span><br><span class="line">    context.Response.ContentType = &quot;text/plain&quot;;</span><br><span class="line">    string action = context.Request[&quot;action&quot;];</span><br><span class="line">    String str = string.Empty;</span><br><span class="line">    if (context.Request[&quot;pageIndex&quot;] != null &amp;&amp; context.Request[&quot;pageIndex&quot;].ToString().Length &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        int pageIndex; //具体的页面数 </span><br><span class="line">        int total = 0;</span><br><span class="line">        int.TryParse(context.Request[&quot;pageIndex&quot;], out pageIndex);</span><br><span class="line">        if (context.Request[&quot;pageSize&quot;] != null &amp;&amp; context.Request[&quot;pageSize&quot;].ToString().Length &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            //页面显示条数 </span><br><span class="line">            int size = Convert.ToInt32(context.Request[&quot;pageSize&quot;]);</span><br><span class="line">            string data = &quot;&quot;;</span><br><span class="line">            if (action == &quot;contact&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                int id;</span><br><span class="line">                if (!int.TryParse(context.Request[&quot;id&quot;], out id))</span><br><span class="line">                &#123;</span><br><span class="line">                    context.Response.Write(data);</span><br><span class="line">                    context.Response.End();</span><br><span class="line">                &#125;</span><br><span class="line">                data = BindSourceContact(size, pageIndex, out total, id);</span><br><span class="line">            &#125;</span><br><span class="line">            context.Response.Write(data);</span><br><span class="line">            context.Response.End();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#region 无刷新分页 我的留言信息</span><br><span class="line">public string BindSourceContact(int pageSize, int page, out int total, int id)</span><br><span class="line">&#123;</span><br><span class="line">    System.Data.DataTable dt = GetTable(&quot;T_InvePro as a,T_User as b&quot;, &quot;*&quot;, pageSize, (page - 1) * pageSize, &quot;b.U_ID=a.I_UserID and I_ProID=&quot; + id, &quot;I_ID&quot;, &quot;desc&quot;, &quot;I_ID&quot;, out total);</span><br><span class="line">    System.Text.StringBuilder sb = new System.Text.StringBuilder();</span><br><span class="line">    if (dt != null &amp;&amp; dt.Rows.Count &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach (System.Data.DataRow row in dt.Rows)</span><br><span class="line">        &#123;</span><br><span class="line">          //查询具体的数据</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //返回</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">#endregion</span><br><span class="line">#region 分页</span><br><span class="line">///&lt;summary&gt;分页查询数据并返回DataTable的公共方法&lt;/summary&gt;</span><br><span class="line">///&lt;param name=&quot;tableName&quot;&gt;表名&lt;/param&gt;</span><br><span class="line">///&lt;param name=&quot;field&quot;&gt;需要查询的字段&lt;/param&gt;</span><br><span class="line">///&lt;param name=&quot;pageSize&quot;&gt;每页显示数据的条数&lt;/param&gt;</span><br><span class="line">///&lt;param name=&quot;start&quot;&gt;排除的数据量&lt;/param&gt;</span><br><span class="line">///&lt;param name=&quot;sqlWhere&quot;&gt;where条件&lt;/param&gt;</span><br><span class="line">///&lt;param name=&quot;sortName&quot;&gt;排序名称&lt;/param&gt;</span><br><span class="line">///&lt;param name=&quot;sortOrder&quot;&gt;排序方式&lt;/param&gt;</span><br><span class="line">///&lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public static DataTable GetTable(String tableName, String field, int pageSize, int start, String sqlWhere, String sortName, String sortOrder, String primaryKey, out Int32 total)</span><br><span class="line">&#123;</span><br><span class="line">    //String sql = String.Format(&quot;select top &#123;0&#125; &#123;1&#125; from &#123;2&#125; where &#123;7&#125; and &#123;6&#125; not in (select top &#123;3&#125; &#123;6&#125; from &#123;2&#125; where &#123;7&#125; order by &#123;4&#125; &#123;5&#125;) order by &#123;4&#125; &#123;5&#125; &quot;,</span><br><span class="line">    //pageSize, field, tableName, start, sortName, sortOrder, primaryKey, sqlWhere);</span><br><span class="line">    /*上面的分页效率极低，5000条数据几乎就不动了*/</span><br><span class="line">    String sql = String.Format(&quot;select a.* from ( select top &#123;1&#125; * from &#123;2&#125; where &#123;7&#125; order by &#123;3&#125; &#123;4&#125;) a left join ( select top &#123;5&#125; * from &#123;2&#125; where &#123;7&#125; order by &#123;3&#125; &#123;4&#125;) b on a.&#123;6&#125;=b.&#123;6&#125; where iif(b.&#123;6&#125;,&apos;0&apos;,&apos;1&apos;)=&apos;1&apos;&quot;,field, start + pageSize, tableName, sortName, sortOrder, start, primaryKey, sqlWhere);</span><br><span class="line">    if (start &lt;= 0)</span><br><span class="line">    &#123;</span><br><span class="line">        sql = String.Format(&quot;select top &#123;0&#125; &#123;1&#125; from &#123;2&#125; where &#123;3&#125; order by &#123;4&#125; &#123;5&#125; &quot;,</span><br><span class="line">        pageSize, field, tableName, sqlWhere, sortName, sortOrder);</span><br><span class="line">    &#125;</span><br><span class="line">    DataTable dt = ExecuteDataTable(sql, CommandType.Text, null);</span><br><span class="line">    sql = &quot;select count(1) from &quot; + tableName + &quot; where &quot; + sqlWhere;</span><br><span class="line">    total = Convert.ToInt32(ExecuteScalar(sql, CommandType.Text, null));</span><br><span class="line">    return dt;</span><br><span class="line">&#125;</span><br><span class="line">#endregion</span><br></pre></td></tr></table></figure>
<h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3><ol>
<li><a href="http://obgwarx9r.bkt.clouddn.com/jquery.pagination.zip" target="_blank" rel="external">css和js下载</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;html代码&quot;&gt;&lt;a href=&quot;#html代码&quot; class=&quot;headerlink&quot; title=&quot;html代码&quot;&gt;&lt;/a&gt;html代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="插件" scheme="http://blog.pqpqpq.cn/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="分页" scheme="http://blog.pqpqpq.cn/tags/%E5%88%86%E9%A1%B5/"/>
    
      <category term="加载" scheme="http://blog.pqpqpq.cn/tags/%E5%8A%A0%E8%BD%BD/"/>
    
      <category term="数据" scheme="http://blog.pqpqpq.cn/tags/%E6%95%B0%E6%8D%AE/"/>
    
      <category term="ajax" scheme="http://blog.pqpqpq.cn/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>简单好用的无刷新上传插件</title>
    <link href="http://blog.pqpqpq.cn/ajaxupload/"/>
    <id>http://blog.pqpqpq.cn/ajaxupload/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T09:51:13.136Z</updated>
    
    <content type="html"><![CDATA[<h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;button&quot; onclick=&quot;doUpload()&quot; value=&quot;点击上传&quot; class=&quot;del_all&quot;  style=&quot;width:80px;height:25px;line-height:25px;margin:0px;&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;Scripts/jquery.upload.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">            //文件上传</span><br><span class="line">            function doUpload() &#123;</span><br><span class="line">                // 上传方法</span><br><span class="line">                $.upload(&#123;</span><br><span class="line">                    // 上传地址</span><br><span class="line">                    url: &apos;/web_message/upload.ashx&apos;,</span><br><span class="line">                    // 文件域名字</span><br><span class="line">                    fileName: &apos;filedata&apos;,</span><br><span class="line">                    // 其他表单数据</span><br><span class="line">                    params: &#123; name: &apos;pxblog&apos; &#125;,</span><br><span class="line">                    // 上传完成后, 返回json, text</span><br><span class="line">                    dataType: &apos;json&apos;,</span><br><span class="line">                    // 上传之前回调,return true表示可继续上传</span><br><span class="line">                    onSend: function () &#123;</span><br><span class="line">                        return true;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    // 上传之后回调</span><br><span class="line">                    onComplate: function (data) &#123;</span><br><span class="line">                        $(&quot;#userface&quot;).attr(&quot;src&quot;, data);</span><br><span class="line">                        $(&quot;#imgsrc&quot;).attr(&quot;value&quot;, data);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="C-代码-一般处理程序"><a href="#C-代码-一般处理程序" class="headerlink" title="C#代码 (一般处理程序)"></a>C#代码 (一般处理程序)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">foreach (string key in context.Request.Files)</span><br><span class="line">           &#123;</span><br><span class="line">               //Response.Write(Request.Files[key].FileName);</span><br><span class="line">               context.Request.Files[key].SaveAs(context.Server.MapPath(&quot;/uploads/&quot; + context.Request.Files[key].FileName));</span><br><span class="line">               context.Response.Write(&quot;/uploads/&quot; + context.Request.Files[key].FileName);</span><br><span class="line">           &#125;</span><br><span class="line">context.Response.End();</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个就是这么简单的使用，拒绝繁琐，引领高端。兼容手机浏览器 (flash插件上传手机浏览器不兼容)</p>
</blockquote>
<h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3><ol>
<li><a href="http://obgwarx9r.bkt.clouddn.com/jquery.upload.zip" target="_blank" rel="external">jquery.upload.js下载</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;html代码&quot;&gt;&lt;a href=&quot;#html代码&quot; class=&quot;headerlink&quot; title=&quot;html代码&quot;&gt;&lt;/a&gt;html代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="插件" scheme="http://blog.pqpqpq.cn/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="ajax" scheme="http://blog.pqpqpq.cn/tags/ajax/"/>
    
      <category term="无刷新" scheme="http://blog.pqpqpq.cn/tags/%E6%97%A0%E5%88%B7%E6%96%B0/"/>
    
      <category term="上传" scheme="http://blog.pqpqpq.cn/tags/%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="插件" scheme="http://blog.pqpqpq.cn/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown 语法快速入门</title>
    <link href="http://blog.pqpqpq.cn/markdown/"/>
    <id>http://blog.pqpqpq.cn/markdown/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T10:00:04.955Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>在此，我们总结 Markdown 的优点如下：</p>
</blockquote>
<ul>
<li>纯文本，所以兼容性极强，可以用所有文本编辑器打开。</li>
<li>让你专注于文字而不是排版。</li>
<li>格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。</li>
<li>Markdown 的标记语法有极好的可读性。<br>注意：<br><em>markdown符号：+ - </em> 这三者等效<em><br><em>*符号后面必须有一个空格</em></em></li>
</ul>
<hr>
<p>###开始上手</p>
<blockquote>
<p>标题 </p>
</blockquote>
<pre><code># 标题一
## 标题二    
### 标题三
#### 标题四        
##### 标题五        
###### 标题六        
</code></pre><h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><h4 id="标题四"><a href="#标题四" class="headerlink" title="标题四"></a>标题四</h4><h5 id="标题五"><a href="#标题五" class="headerlink" title="标题五"></a>标题五</h5><h6 id="标题六"><a href="#标题六" class="headerlink" title="标题六"></a>标题六</h6><hr>
<blockquote>
<p>无序列表</p>
</blockquote>
<pre><code>+ c#
+ c++
+ java
+ c
</code></pre><ul>
<li>c#</li>
<li>c++</li>
<li>java</li>
<li>c</li>
</ul>
<blockquote>
<p>有序列表</p>
</blockquote>
<pre><code>1. c#
2. c++
3. java
4. c
</code></pre><ol>
<li>c#</li>
<li>c++</li>
<li>java</li>
<li>c</li>
</ol>
<hr>
<blockquote>
<p>链接</p>
</blockquote>
<pre><code>引用方式:
[c#](http://blog.pqpqpq.cn)
[java](http://pqpqpq.cn)

内联方式:
[c++][1]
[c][2]
[1]:http://pqpqpq.cn
[2]:http://pqpqpq.cn
</code></pre><p><a href="http://blog.pqpqpq.cn">c#</a><br><a href="http://pqpqpq.cn" target="_blank" rel="external">java</a><br><a href="http://pqpqpq.cn" target="_blank" rel="external">c++</a><br><a href="http://blog.pqpqpq.cn">c</a></p>
<hr>
<hr>
<blockquote>
<p>倾斜和粗体</p>
</blockquote>
<pre><code>*welcome* to my **website**...
_welcome_ to my __website__...
</code></pre><p><em>welcome</em> to my <strong>website</strong>…<br><em>welcome</em> to my <strong>website</strong>…</p>
<hr>
<blockquote>
<p>表格 <span style="font-size:12px;color:red;">英文冒号代表对齐方式:左边则居左，右边居右，两边都有则居中。</span></p>
</blockquote>
<pre><code>| Tables        | Are           | Cool  |
|:------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |

dog | bird | cat
----|------|----
foo | foo  | foo
bar | bar  | bar
baz | baz  | baz
</code></pre><table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>dog</th>
<th>bird</th>
<th>cat</th>
</tr>
</thead>
<tbody>
<tr>
<td>foo</td>
<td>foo</td>
<td>foo</td>
</tr>
<tr>
<td>bar</td>
<td>bar</td>
<td>bar</td>
</tr>
<tr>
<td>baz</td>
<td>baz</td>
<td>baz</td>
</tr>
</tbody>
</table>
<hr>
<blockquote>
<p>代码 <code>HTML中所谓的Code</code></p>
</blockquote>
<ul>
<li>简单文字出现一个代码框。使用<code>&lt;blockquote&gt;</code>。（<code>不是单引号而是左上角的ESC下面~中的</code>）</li>
<li>大片文字需要实现代码框。使用Tab和四个空格。</li>
</ul>
<blockquote>
<p>下划线</p>
</blockquote>
<pre><code>---
***
</code></pre><hr>
<hr>
<blockquote>
<p>块注释 <code>通过在文字开头添加“&gt;”表示块注释</code></p>
<p>liujiaxian</p>
<hr>
<p>转义字符</p>
</blockquote>
<p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果想要用星号加在文字旁边的方式来做出强调效果（但不用 <em> 标签），可以在星号的前面加上反斜杠：</em></p>
<pre><code>\*literal asterisks\*
</code></pre><p>Markdown 支持在下面这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<pre><code>\   反斜杠
`   反引号
*   星号
_   底线
{}  大括号
[]  方括号
()  括号
#   井字号
+    加号
-    减号
.   英文句点
!   惊叹号
</code></pre><hr>
<blockquote>
<p>脚注（footnote）</p>
</blockquote>
<pre><code>hello[^hello]
[^hello]: hi
</code></pre><p>hello<a href="hi">^hello</a></p>
<p>References： </p>
<p>以上内容根据官方文档基本文档进行整理。<a href="http://daringfireball.net/projects/markdown/basics" target="_blank" rel="external">http://daringfireball.net/projects/markdown/basics</a><br>Markdown官方网站：<a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">http://daringfireball.net/projects/markdown/</a> </p>
<p>推荐一款在线的Markdown编辑器：<a href="https://stackedit.io/" target="_blank" rel="external">https://stackedit.io/</a> </p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在此，我们总结 Markdown 的优点如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;纯文本，所以兼容性极强，可以用所有文本编辑器打开。&lt;/li&gt;
&lt;li&gt;让你专注于文字而不是排版。&lt;/li&gt;
&lt;li&gt;格式转换方便，Markdown
    
    </summary>
    
      <category term="编辑器" scheme="http://blog.pqpqpq.cn/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
      <category term="markdown" scheme="http://blog.pqpqpq.cn/tags/markdown/"/>
    
      <category term="编辑器" scheme="http://blog.pqpqpq.cn/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="语法" scheme="http://blog.pqpqpq.cn/tags/%E8%AF%AD%E6%B3%95/"/>
    
      <category term="入门" scheme="http://blog.pqpqpq.cn/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>Cookie加密与解密</title>
    <link href="http://blog.pqpqpq.cn/cookie/"/>
    <id>http://blog.pqpqpq.cn/cookie/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T09:17:10.688Z</updated>
    
    <content type="html"><![CDATA[<h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string str=EncryptCookie(&quot;你要保存的数据&quot;);</span><br><span class="line">HttpCookie cookie=new HttpCookie(&quot;login_id&quot;,str);</span><br><span class="line">cookie.Expired=DateTime.Now.AddDay(3);</span><br><span class="line">Response.Cookie.Add(cookie);</span><br></pre></td></tr></table></figure>
<h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HttpCookie cookie=Request.Cookie(&quot;login_id&quot;);</span><br><span class="line">if(cookie==null)return;</span><br><span class="line">string str=DecryptCookie(cookie.Value);</span><br></pre></td></tr></table></figure>
<h3 id="C-代码"><a href="#C-代码" class="headerlink" title="C#代码"></a>C#代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">   /// 加密</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   /// &lt;param name=&quot;name&quot;&gt;&lt;/param&gt;</span><br><span class="line">   /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">   public static string EncryptCookie(string QueryString)//标准的DES加密  关键字、数据加密</span><br><span class="line">   &#123;</span><br><span class="line">       return Encrypt(QueryString, _QueryStringKey);</span><br><span class="line">   &#125;</span><br><span class="line">   /// &lt;summary&gt;</span><br><span class="line">   /// 解密</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   /// &lt;param name=&quot;temp&quot;&gt;&lt;/param&gt;</span><br><span class="line">   /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">   private static string DecryptCookie(string QueryString)//标准的DES解密</span><br><span class="line">   &#123;</span><br><span class="line">       return Decrypt(QueryString, _QueryStringKey);</span><br><span class="line">   &#125;</span><br><span class="line">   //URL传输参数加密Key这个key可以自己设置支持8位这个东西很重要的,密钥</span><br><span class="line">   static string _QueryStringKey = &quot;12345678&quot;;</span><br><span class="line"></span><br><span class="line">   public static string Encrypt(string originalString, string sKey)</span><br><span class="line">   &#123;</span><br><span class="line">       try</span><br><span class="line">       &#123;</span><br><span class="line">           DESCryptoServiceProvider des = new DESCryptoServiceProvider();</span><br><span class="line"></span><br><span class="line">           // 把字符串放到byte数组中</span><br><span class="line">           byte[] inputByteArray = Encoding.Default.GetBytes(originalString);</span><br><span class="line"></span><br><span class="line">           des.Key = ASCIIEncoding.ASCII.GetBytes(sKey); //建立加密对象的密钥和偏移量</span><br><span class="line">           des.IV = ASCIIEncoding.ASCII.GetBytes(sKey);  //原文使用ASCIIEncoding.ASCII方法的</span><br><span class="line"></span><br><span class="line">           // GetBytes方法</span><br><span class="line">           MemoryStream ms = new MemoryStream();         //使得输入密码必须输入英文文本</span><br><span class="line">           CryptoStream cs = new CryptoStream(ms, des.CreateEncryptor(), CryptoStreamMode.Write);</span><br><span class="line"></span><br><span class="line">           cs.Write(inputByteArray, 0, inputByteArray.Length);</span><br><span class="line">           cs.FlushFinalBlock();</span><br><span class="line">           StringBuilder ret = new StringBuilder();</span><br><span class="line"></span><br><span class="line">           foreach (byte b in ms.ToArray())</span><br><span class="line">           &#123;</span><br><span class="line">               ret.AppendFormat(&quot;&#123;0:X2&#125;&quot;, b);</span><br><span class="line">           &#125;</span><br><span class="line">           ret.ToString();</span><br><span class="line">           return ret.ToString();</span><br><span class="line">       &#125;</span><br><span class="line">       catch</span><br><span class="line">       &#123;</span><br><span class="line">           return &quot;&quot;;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   public static string Decrypt(string originalString, string sKey)</span><br><span class="line">   &#123;</span><br><span class="line">       try</span><br><span class="line">       &#123;</span><br><span class="line">           DESCryptoServiceProvider des = new DESCryptoServiceProvider();</span><br><span class="line"></span><br><span class="line">           byte[] inputByteArray = new byte[originalString.Length / 2];</span><br><span class="line">           for (int x = 0; x &lt; originalString.Length / 2; x++)</span><br><span class="line">           &#123;</span><br><span class="line">               int i = (Convert.ToInt32(originalString.Substring(x * 2, 2), 16));</span><br><span class="line">               inputByteArray[x] = (byte)i;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           //建立加密对象的密钥和偏移量，此值重要，不能修改</span><br><span class="line"></span><br><span class="line">           des.Key = ASCIIEncoding.ASCII.GetBytes(sKey);</span><br><span class="line"></span><br><span class="line">           des.IV = ASCIIEncoding.ASCII.GetBytes(sKey);</span><br><span class="line">           MemoryStream ms = new MemoryStream();</span><br><span class="line">           CryptoStream cs = new CryptoStream(ms, des.CreateDecryptor(), CryptoStreamMode.Write);</span><br><span class="line"></span><br><span class="line">           cs.Write(inputByteArray, 0, inputByteArray.Length);</span><br><span class="line">           cs.FlushFinalBlock();</span><br><span class="line"></span><br><span class="line">           //建立StringBuild对象，CreateDecrypt使用的是流对象，必须把解密后的文本变成流对象</span><br><span class="line">           StringBuilder ret = new StringBuilder();</span><br><span class="line"></span><br><span class="line">           return System.Text.Encoding.Default.GetString(ms.ToArray());</span><br><span class="line">       &#125;</span><br><span class="line">       catch</span><br><span class="line">       &#123;</span><br><span class="line">           return &quot;&quot;;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果你用Session的话原来也是一样的，一般安全性不是很高的数据就没有必要加密的，像验证码之类的，但是安全性要求比较高的数据就不得不加密了。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;加密&quot;&gt;&lt;a href=&quot;#加密&quot; class=&quot;headerlink&quot; title=&quot;加密&quot;&gt;&lt;/a&gt;加密&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
    
    </summary>
    
      <category term="C#" scheme="http://blog.pqpqpq.cn/categories/C/"/>
    
    
      <category term="Cookie" scheme="http://blog.pqpqpq.cn/tags/Cookie/"/>
    
      <category term="加密" scheme="http://blog.pqpqpq.cn/tags/%E5%8A%A0%E5%AF%86/"/>
    
      <category term="解密" scheme="http://blog.pqpqpq.cn/tags/%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>封装自定义验证方法-jQuery Validate</title>
    <link href="http://blog.pqpqpq.cn/jqueryvalidate/"/>
    <id>http://blog.pqpqpq.cn/jqueryvalidate/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T09:58:56.718Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><blockquote>
<p>本篇文章主要是对jquery validate 自定义验证方法日期验证进行了介绍，需要的朋友可以过来参考下，希望对大家有所帮助,jquery validate有很多验证规则，但是更多的时候，需要根据特定的情况进行自定义验证规则。<br>这里就来聊一聊jquery validate的自定义验证。jquery validate有一个方法，可以让用户来自定义验证规则。</p>
</blockquote>
<h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">/*****************************************************************</span><br><span class="line">                  jQuery Validate扩展验证方法  (linjq)       </span><br><span class="line">*****************************************************************/</span><br><span class="line">$(function()&#123;</span><br><span class="line">    // 判断整数value是否等于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isIntEqZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseInt(value);      </span><br><span class="line">         return this.optional(element) || value==0;       </span><br><span class="line">    &#125;, &quot;整数必须为0&quot;); </span><br><span class="line">      </span><br><span class="line">    // 判断整数value是否大于0</span><br><span class="line">    jQuery.validator.addMethod(&quot;isIntGtZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseInt(value);      </span><br><span class="line">         return this.optional(element) || value&gt;0;       </span><br><span class="line">    &#125;, &quot;整数必须大于0&quot;); </span><br><span class="line">      </span><br><span class="line">    // 判断整数value是否大于或等于0</span><br><span class="line">    jQuery.validator.addMethod(&quot;isIntGteZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseInt(value);      </span><br><span class="line">         return this.optional(element) || value&gt;=0;       </span><br><span class="line">    &#125;, &quot;整数必须大于或等于0&quot;);   </span><br><span class="line">    </span><br><span class="line">    // 判断整数value是否不等于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isIntNEqZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseInt(value);      </span><br><span class="line">         return this.optional(element) || value!=0;       </span><br><span class="line">    &#125;, &quot;整数必须不等于0&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断整数value是否小于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isIntLtZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseInt(value);      </span><br><span class="line">         return this.optional(element) || value&lt;0;       </span><br><span class="line">    &#125;, &quot;整数必须小于0&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断整数value是否小于或等于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isIntLteZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseInt(value);      </span><br><span class="line">         return this.optional(element) || value&lt;=0;       </span><br><span class="line">    &#125;, &quot;整数必须小于或等于0&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断浮点数value是否等于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloatEqZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseFloat(value);      </span><br><span class="line">         return this.optional(element) || value==0;       </span><br><span class="line">    &#125;, &quot;浮点数必须为0&quot;); </span><br><span class="line">      </span><br><span class="line">    // 判断浮点数value是否大于0</span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloatGtZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseFloat(value);      </span><br><span class="line">         return this.optional(element) || value&gt;0;       </span><br><span class="line">    &#125;, &quot;浮点数必须大于0&quot;); </span><br><span class="line">      </span><br><span class="line">    // 判断浮点数value是否大于或等于0</span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloatGteZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseFloat(value);      </span><br><span class="line">         return this.optional(element) || value&gt;=0;       </span><br><span class="line">    &#125;, &quot;浮点数必须大于或等于0&quot;);   </span><br><span class="line">    </span><br><span class="line">    // 判断浮点数value是否不等于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloatNEqZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseFloat(value);      </span><br><span class="line">         return this.optional(element) || value!=0;       </span><br><span class="line">    &#125;, &quot;浮点数必须不等于0&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断浮点数value是否小于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloatLtZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseFloat(value);      </span><br><span class="line">         return this.optional(element) || value&lt;0;       </span><br><span class="line">    &#125;, &quot;浮点数必须小于0&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断浮点数value是否小于或等于0 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloatLteZero&quot;, function(value, element) &#123; </span><br><span class="line">         value=parseFloat(value);      </span><br><span class="line">         return this.optional(element) || value&lt;=0;       </span><br><span class="line">    &#125;, &quot;浮点数必须小于或等于0&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断浮点型  </span><br><span class="line">    jQuery.validator.addMethod(&quot;isFloat&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[-\+]?\d+(\.\d+)?$/.test(value);       </span><br><span class="line">    &#125;, &quot;只能包含数字、小数点等字符&quot;); </span><br><span class="line">     </span><br><span class="line">    // 匹配integer</span><br><span class="line">    jQuery.validator.addMethod(&quot;isInteger&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || (/^[-\+]?\d+$/.test(value) &amp;&amp; parseInt(value)&gt;=0);       </span><br><span class="line">    &#125;, &quot;匹配integer&quot;);  </span><br><span class="line">     </span><br><span class="line">    // 判断数值类型，包括整数和浮点数</span><br><span class="line">    jQuery.validator.addMethod(&quot;isNumber&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[-\+]?\d+$/.test(value) || /^[-\+]?\d+(\.\d+)?$/.test(value);       </span><br><span class="line">    &#125;, &quot;匹配数值类型，包括整数和浮点数&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 只能输入[0-9]数字</span><br><span class="line">    jQuery.validator.addMethod(&quot;isDigits&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^\d+$/.test(value);       </span><br><span class="line">    &#125;, &quot;只能输入0-9数字&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 判断中文字符 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isChinese&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[\u0391-\uFFE5]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;只能包含中文字符。&quot;);   </span><br><span class="line"> </span><br><span class="line">    // 判断英文字符 </span><br><span class="line">    jQuery.validator.addMethod(&quot;isEnglish&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[A-Za-z]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;只能包含英文字符。&quot;);   </span><br><span class="line"> </span><br><span class="line">     // 手机号码验证    </span><br><span class="line">    jQuery.validator.addMethod(&quot;isMobile&quot;, function(value, element) &#123;    </span><br><span class="line">      var length = value.length;    </span><br><span class="line">      return this.optional(element) || (length == 11 &amp;&amp; /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/.test(value));    </span><br><span class="line">    &#125;, &quot;请正确填写您的手机号码。&quot;);</span><br><span class="line"></span><br><span class="line">    // 电话号码验证    </span><br><span class="line">    jQuery.validator.addMethod(&quot;isPhone&quot;, function(value, element) &#123;    </span><br><span class="line">      var tel = /^(\d&#123;3,4&#125;-?)?\d&#123;7,9&#125;$/g;    </span><br><span class="line">      return this.optional(element) || (tel.test(value));    </span><br><span class="line">    &#125;, &quot;请正确填写您的电话号码。&quot;);</span><br><span class="line"></span><br><span class="line">    // 联系电话(手机/电话皆可)验证   </span><br><span class="line">    jQuery.validator.addMethod(&quot;isTel&quot;, function(value,element) &#123;   </span><br><span class="line">        var length = value.length;   </span><br><span class="line">        var mobile = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/;   </span><br><span class="line">        var tel = /^(\d&#123;3,4&#125;-?)?\d&#123;7,9&#125;$/g;       </span><br><span class="line">        return this.optional(element) || tel.test(value) || (length==11 &amp;&amp; mobile.test(value));   </span><br><span class="line">    &#125;, &quot;请正确填写您的联系方式&quot;); </span><br><span class="line"> </span><br><span class="line">     // 匹配qq      </span><br><span class="line">    jQuery.validator.addMethod(&quot;isQq&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[1-9]\d&#123;4,12&#125;$/;       </span><br><span class="line">    &#125;, &quot;匹配QQ&quot;);   </span><br><span class="line"> </span><br><span class="line">     // 邮政编码验证    </span><br><span class="line">    jQuery.validator.addMethod(&quot;isZipCode&quot;, function(value, element) &#123;    </span><br><span class="line">      var zip = /^[0-9]&#123;6&#125;$/;    </span><br><span class="line">      return this.optional(element) || (zip.test(value));    </span><br><span class="line">    &#125;, &quot;请正确填写您的邮政编码。&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 匹配密码，以字母开头，长度在6-12之间，只能包含字符、数字和下划线。      </span><br><span class="line">    jQuery.validator.addMethod(&quot;isPwd&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[a-zA-Z]\\w&#123;6,12&#125;$/.test(value);       </span><br><span class="line">    &#125;, &quot;以字母开头，长度在6-12之间，只能包含字符、数字和下划线。&quot;);  </span><br><span class="line">    </span><br><span class="line">    // 身份证号码验证</span><br><span class="line">    jQuery.validator.addMethod(&quot;isIdCardNo&quot;, function(value, element) &#123; </span><br><span class="line">      //var idCard = /^(\d&#123;6&#125;)()?(\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;)(\w)$/;   </span><br><span class="line">      return this.optional(element) || isIdCardNo(value);    </span><br><span class="line">    &#125;, &quot;请输入正确的身份证号码。&quot;); </span><br><span class="line"></span><br><span class="line">    // IP地址验证   </span><br><span class="line">    jQuery.validator.addMethod(&quot;ip&quot;, function(value, element) &#123;    </span><br><span class="line">      return this.optional(element) || /^(([1-9]|([1-9]\d)|(1\d\d)|(2([0-4]\d|5[0-5])))\.)(([1-9]|([1-9]\d)|(1\d\d)|(2([0-4]\d|5[0-5])))\.)&#123;2&#125;([1-9]|([1-9]\d)|(1\d\d)|(2([0-4]\d|5[0-5])))$/.test(value);    </span><br><span class="line">    &#125;, &quot;请填写正确的IP地址。&quot;);</span><br><span class="line">   </span><br><span class="line">    // 字符验证，只能包含中文、英文、数字、下划线等字符。    </span><br><span class="line">    jQuery.validator.addMethod(&quot;stringCheck&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[a-zA-Z0-9\u4e00-\u9fa5-_]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;只能包含中文、英文、数字、下划线等字符&quot;);   </span><br><span class="line">   </span><br><span class="line">    // 匹配english  </span><br><span class="line">    jQuery.validator.addMethod(&quot;isEnglish&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[A-Za-z]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;匹配english&quot;);   </span><br><span class="line">    </span><br><span class="line">    // 匹配汉字  </span><br><span class="line">    jQuery.validator.addMethod(&quot;isChinese&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[\u4e00-\u9fa5]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;匹配汉字&quot;);   </span><br><span class="line">    </span><br><span class="line">    // 匹配中文(包括汉字和字符) </span><br><span class="line">    jQuery.validator.addMethod(&quot;isChineseChar&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[\u0391-\uFFE5]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;匹配中文(包括汉字和字符) &quot;); </span><br><span class="line">      </span><br><span class="line">    // 判断是否为合法字符(a-zA-Z0-9-_)</span><br><span class="line">    jQuery.validator.addMethod(&quot;isRightfulString&quot;, function(value, element) &#123;       </span><br><span class="line">         return this.optional(element) || /^[A-Za-z0-9_-]+$/.test(value);       </span><br><span class="line">    &#125;, &quot;判断是否为合法字符(a-zA-Z0-9-_)&quot;);   </span><br><span class="line">    </span><br><span class="line">    // 判断是否包含中英文特殊字符，除英文&quot;-_&quot;字符外</span><br><span class="line">    jQuery.validator.addMethod(&quot;isContainsSpecialChar&quot;, function(value, element) &#123;  </span><br><span class="line">         var reg = RegExp(/[(\ )(\`)(\~)(\!)(\@)(\#)(\$)(\%)(\^)(\&amp;)(\*)(\()(\))(\+)(\=)(\|)(\&#123;)(\&#125;)(\&apos;)(\:)(\;)(\&apos;)(&apos;,)(\[)(\])(\.)(\&lt;)(\&gt;)(\/)(\?)(\~)(\！)(\@)(\#)(\￥)(\%)(\…)(\&amp;)(\*)(\（)(\）)(\—)(\+)(\|)(\&#123;)(\&#125;)(\【)(\】)(\‘)(\；)(\：)(\”)(\“)(\’)(\。)(\，)(\、)(\？)]+/);   </span><br><span class="line">         return this.optional(element) || !reg.test(value);       </span><br><span class="line">    &#125;, &quot;含有中英文特殊字符&quot;);   </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    //身份证号码的验证规则</span><br><span class="line">    function isIdCardNo(num)&#123; </span><br><span class="line">    　   //if (isNaN(num)) &#123;alert(&quot;输入的不是数字！&quot;); return false;&#125; </span><br><span class="line">    　　 var len = num.length, re; </span><br><span class="line">    　　 if (len == 15) </span><br><span class="line">    　　 re = new RegExp(/^(\d&#123;6&#125;)()?(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\w)$/); </span><br><span class="line">    　　 else if (len == 18) </span><br><span class="line">    　　 re = new RegExp(/^(\d&#123;6&#125;)()?(\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;)(\w)$/); </span><br><span class="line">    　　 else &#123;</span><br><span class="line">            //alert(&quot;输入的数字位数不对。&quot;); </span><br><span class="line">            return false;</span><br><span class="line">        &#125; </span><br><span class="line">    　　 var a = num.match(re); </span><br><span class="line">    　　 if (a != null) </span><br><span class="line">    　　 &#123; </span><br><span class="line">    　　 if (len==15) </span><br><span class="line">    　　 &#123; </span><br><span class="line">    　　 var D = new Date(&quot;19&quot;+a[3]+&quot;/&quot;+a[4]+&quot;/&quot;+a[5]); </span><br><span class="line">    　　 var B = D.getYear()==a[3]&amp;&amp;(D.getMonth()+1)==a[4]&amp;&amp;D.getDate()==a[5]; </span><br><span class="line">    　　 &#125; </span><br><span class="line">    　　 else </span><br><span class="line">    　　 &#123; </span><br><span class="line">    　　 var D = new Date(a[3]+&quot;/&quot;+a[4]+&quot;/&quot;+a[5]); </span><br><span class="line">    　　 var B = D.getFullYear()==a[3]&amp;&amp;(D.getMonth()+1)==a[4]&amp;&amp;D.getDate()==a[5]; </span><br><span class="line">    　　 &#125; </span><br><span class="line">    　　 if (!B) &#123;</span><br><span class="line">            //alert(&quot;输入的身份证号 &quot;+ a[0] +&quot; 里出生日期不对。&quot;); </span><br><span class="line">            return false;</span><br><span class="line">        &#125; </span><br><span class="line">    　　 &#125; </span><br><span class="line">    　　 if(!re.test(num))&#123;</span><br><span class="line">            //alert(&quot;身份证最后一位只能是数字和字母。&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    　　 return true; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//车牌号校验</span><br><span class="line">function isPlateNo(plateNo)&#123;</span><br><span class="line">    var re = /^[\u4e00-\u9fa5]&#123;1&#125;[A-Z]&#123;1&#125;[A-Z_0-9]&#123;5&#125;$/;</span><br><span class="line">    if(re.test(plateNo))&#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;/static/js/jquery.validate.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $().ready(function () &#123;</span><br><span class="line">            $(&quot;#frmpwd&quot;).validate(&#123;</span><br><span class="line">                rules: &#123;</span><br><span class="line">                    Email: &#123;</span><br><span class="line">                    required:true,</span><br><span class="line">                        telphoneValid:true,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    Vcode:&quot;required&quot;,         </span><br><span class="line">                &#125;,</span><br><span class="line">                messages: &#123;</span><br><span class="line">                    Email:&#123; </span><br><span class="line">                    required:&quot;请输入手机号码！&quot;,</span><br><span class="line">                    telphoneValid:&quot;手机号码格式不正确！&quot;,                  </span><br><span class="line">                    &#125;,</span><br><span class="line">                    Vcode:&quot;请输入验证码！&quot;,        </span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">// 手机号码验证    </span><br><span class="line">    jQuery.validator.addMethod(&quot;telphoneValid&quot;, function(value, element) &#123;    </span><br><span class="line">      var length = value.length;    </span><br><span class="line">      return this.optional(element) || (length == 11 &amp;&amp; /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/.test(value));    </span><br><span class="line">    &#125;, &quot;请正确填写您的手机号码。&quot;);</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3><ol>
<li><a href="http://obgwarx9r.bkt.clouddn.com/jquery.validate.min.zip" target="_blank" rel="external">js文件下载</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;本篇文章主要是对jquery validate 自定义验证方法日期验证进行了介绍，需要的朋友可以过来参考下，希望对
    
    </summary>
    
      <category term="前端" scheme="http://blog.pqpqpq.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jQuery" scheme="http://blog.pqpqpq.cn/tags/jQuery/"/>
    
      <category term="Validate" scheme="http://blog.pqpqpq.cn/tags/Validate/"/>
    
      <category term="验证" scheme="http://blog.pqpqpq.cn/tags/%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>由github到gitcafe再到Coding的辛酸</title>
    <link href="http://blog.pqpqpq.cn/githubtocoding/"/>
    <id>http://blog.pqpqpq.cn/githubtocoding/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T07:21:03.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>引言</p>
</blockquote>
<p>通过几天的时间终于在github把hexo搭建起来了，但是总感觉速度就是跟不上，要等几秒，有时候甚至访问不了。</p>
<blockquote>
<p>使用国产的gitcafe</p>
</blockquote>
<p>于是来到 <a href="https://gitcafe.com/" target="_blank" rel="external">gitcafe</a> 官网注册了个账号，注册完之后才发现这个，唉，我的乖乖……</p>
<p><span style="color:red;">GitCafe 将于 2016年5月31日 停止所有服务，届时您在 GitCafe 的账户资料及所有项目都将被永久删除，请尽快将您的资料和项目迁移至 Coding。 </span></p>
<blockquote>
<p>使用coding</p>
</blockquote>
<p>于是来到 <a href="https://coding.net/" target="_blank" rel="external">coding</a> 官网注册了个账号.</p>
<blockquote>
<p>怎么使用coding？</p>
</blockquote>
<p>你只需要跟git一样的操作它就行了，工具命令这些都一样。就相当于换了个地址而已。</p>
<blockquote>
<p>项目迁移</p>
</blockquote>
<p>这里就不做详细的介绍，因为全是国语的，相信大家一看就明白了，于是就很快把github中的项目导入到coding中了。</p>
<p><span style="color:red;">注意：这里需要注意的一点就是，导入的时候有一个公开地址，这不是github的克隆地址，而是访问该项目的网址。</span></p>
<blockquote>
<p>部署</p>
</blockquote>
<p>原本以为跟github一样的直接访问<code>projectname.github.io</code>即可，其实coding是需要单独部署的，就是个人中心有个演示，演示里面有服务器的一些配置信息。<strong>来到这里本人立马关闭浏览器，什么玩意，搞了半天竟在浪费时间</strong>。</p>
<hr>
<p><img src="http://pqpqpq.cn/data/attachment/forum/201605/19/170235usygyb8g5xqfqgqw.png" alt=""></p>
<hr>
<p>没想到，速度如果要块还得付出啊，新版的coding新就新在这里吧。</p>
<hr>
<p><code>此博客纯属个人观点，如给别人造成不便，敬请谅解，谢谢！</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;引言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过几天的时间终于在github把hexo搭建起来了，但是总感觉速度就是跟不上，要等几秒，有时候甚至访问不了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用国产的gitcafe&lt;/p&gt;
&lt;/block
    
    </summary>
    
      <category term="git" scheme="http://blog.pqpqpq.cn/categories/git/"/>
    
    
      <category term="git" scheme="http://blog.pqpqpq.cn/tags/git/"/>
    
      <category term="github" scheme="http://blog.pqpqpq.cn/tags/github/"/>
    
      <category term="coding" scheme="http://blog.pqpqpq.cn/tags/coding/"/>
    
      <category term="gitcafe" scheme="http://blog.pqpqpq.cn/tags/gitcafe/"/>
    
  </entry>
  
  <entry>
    <title>简单好用的时间选择插件My97datepicker</title>
    <link href="http://blog.pqpqpq.cn/my97datepicker/"/>
    <id>http://blog.pqpqpq.cn/my97datepicker/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T09:49:17.706Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><blockquote>
<p>我们经常会需要验证字符串的格式，比如密码长度范围、电子邮件格式、固定电话号码和手机号码格式等，这个时候我们经常会需要用到正则表达式。但是正则表达式用起来性能会低一点，所以在需要验证的时候能不使用正则表达式还是尽量不要使用正则表达式。下面贴出来我写的一个验证类，里面包含了一些常用的验证。这些都是服务端的验证，当然为了增加用户体验前端也应该要有验证。</p>
</blockquote>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;../My97DatePicker/WdatePicker.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;input class=&quot;Wdate&quot; onclick=&quot;WdatePicker()&quot; /&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>最主要的就是js文件、CssClass=”Wdate” 和onclick=”WdatePicker()”，这三个满足后即可完美实现，就是怎么简单，对于其他配置请到官网查看文档。</p>
</blockquote>
<h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ol>
<li><a href="http://obgwarx9r.bkt.clouddn.com/My97DatePicker.zip" target="_blank" rel="external">My97datepicker插件下载</a></li>
<li><a href="http://www.my97.net/" target="_blank" rel="external">My97datepicker官网</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;我们经常会需要验证字符串的格式，比如密码长度范围、电子邮件格式、固定电话号码和手机号码格式等，这个时候我们经常会需
    
    </summary>
    
      <category term="插件" scheme="http://blog.pqpqpq.cn/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="插件" scheme="http://blog.pqpqpq.cn/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="My97datepicker" scheme="http://blog.pqpqpq.cn/tags/My97datepicker/"/>
    
      <category term="时间选择" scheme="http://blog.pqpqpq.cn/tags/%E6%97%B6%E9%97%B4%E9%80%89%E6%8B%A9/"/>
    
  </entry>
  
  <entry>
    <title>C# 服务端正则校验</title>
    <link href="http://blog.pqpqpq.cn/regexvalidate/"/>
    <id>http://blog.pqpqpq.cn/regexvalidate/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T08:55:01.702Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><blockquote>
<p>我们经常会需要验证字符串的格式，比如密码长度范围、电子邮件格式、固定电话号码和手机号码格式等，这个时候我们经常会需要用到正则表达式。但是正则表达式用起来性能会低一点，所以在需要验证的时候能不使用正则表达式还是尽量不要使用正则表达式。下面贴出来我写的一个验证类，里面包含了一些常用的验证。这些都是服务端的验证，当然为了增加用户体验前端也应该要有验证。</p>
</blockquote>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">public void GetValidate()</span><br><span class="line">&#123;</span><br><span class="line">	string email = Request[&quot;email&quot;];</span><br><span class="line">	if (!Regex.IsMatch(email, @&quot;^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$&quot;))</span><br><span class="line">	&#123;</span><br><span class="line">		Page.RegisterStartupScript(&quot;test&quot;, &quot;&lt;script&gt;alert(&apos;邮箱格式不正确！&apos;);window.history.go(-1);&lt;/script&gt;&quot;);</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	string phone = Request[&quot;phone&quot;];</span><br><span class="line">	if (!Regex.IsMatch(phone, @&quot;^[1][3-8]\d&#123;9&#125;$&quot;))</span><br><span class="line">	&#123;</span><br><span class="line">		Page.RegisterStartupScript(&quot;test&quot;, &quot;&lt;script&gt;alert(&apos;手机号码格式不正确！&apos;);window.history.go(-1);&lt;/script&gt;&quot;);</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	string phone = Request[&quot;phone&quot;];</span><br><span class="line">	if (!Regex.IsMatch(phone, @&quot;\d&#123;3,4&#125;-\d&#123;7,8&#125;&quot;) &amp;&amp; !Regex.IsMatch(phone, @&quot;^[1]\d&#123;10&#125;&quot;))</span><br><span class="line">	&#123;</span><br><span class="line">		Page.RegisterStartupScript(&quot;test&quot;, &quot;&lt;script&gt;alert(&apos;电话号码格式不正确！&apos;);window.history.go(-1);&lt;/script&gt;&quot;);</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	string shopprice = Request[&quot;shopprice&quot;];</span><br><span class="line">	if (!Regex.IsMatch(shopprice, @&quot;^(([0-9]|([1-9][0-9]&#123;0,9&#125;))((\.[0-9]&#123;1,2&#125;)?))$&quot;))</span><br><span class="line">	&#123;</span><br><span class="line">		Page.RegisterStartupScript(&quot;test&quot;, &quot;&lt;script&gt;alert(&apos;金额格式不正确！&apos;);window.history.go(-1);&lt;/script&gt;&quot;);</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	string shopstore = Request[&quot;shopstore&quot;];</span><br><span class="line">	if (!Regex.IsMatch(shopstore, @&quot;^(0|[1-9]\d*)$&quot;))</span><br><span class="line">	&#123;</span><br><span class="line">		Page.RegisterStartupScript(&quot;test&quot;, &quot;&lt;script&gt;alert(&apos;库存格式不正确！&apos;);window.history.go(-1);&lt;/script&gt;&quot;);</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;我们经常会需要验证字符串的格式，比如密码长度范围、电子邮件格式、固定电话号码和手机号码格式等，这个时候我们经常会需
    
    </summary>
    
      <category term="C#" scheme="http://blog.pqpqpq.cn/categories/C/"/>
    
    
      <category term="验证" scheme="http://blog.pqpqpq.cn/tags/%E9%AA%8C%E8%AF%81/"/>
    
      <category term="C#" scheme="http://blog.pqpqpq.cn/tags/C/"/>
    
      <category term="正则" scheme="http://blog.pqpqpq.cn/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>C# 单例模式</title>
    <link href="http://blog.pqpqpq.cn/singleton/"/>
    <id>http://blog.pqpqpq.cn/singleton/</id>
    <published>2016-06-22T09:32:26.000Z</published>
    <updated>2016-08-07T08:40:39.874Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><blockquote>
<p>最近在学设计模式，学到创建型模式的时候，碰到单例模式（或叫单件模式），现在整理一下笔记。</p>
</blockquote>
<blockquote class="blockquote-center"><br>在《Design Patterns：Elements of Resuable Object-Oriented Software》中的定义是：Ensure a class only has one instance，and provide a global point of access to。它的主要特点不是根据客户程序调用生成一个新的实例，而是控制某个类型的实例数量-唯一一个。（《设计模式-基于C#的工程化实现及扩展》，王翔）。也就是说，单例模式就是保证在整个应用程序的生命周期中，在任何时刻，被指定的类只有一个实例，并为客户程序提供一个获取该实例的全局访问点。<br></blockquote>

<h3 id="经典模式"><a href="#经典模式" class="headerlink" title="经典模式"></a>经典模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">public class Singleton</span><br><span class="line">&#123;</span><br><span class="line">        private static Singleton instance;</span><br><span class="line"></span><br><span class="line">        private Singleton()</span><br><span class="line">        &#123;</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static Singleton GetInstance()</span><br><span class="line">        &#123;</span><br><span class="line">                if(instance==null)</span><br><span class="line">                &#123;</span><br><span class="line">                        instance=new Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">                return instance;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>解析如下 </p>
</blockquote>
<ol>
<li>首先，该Singleton的构造函数必须是私有的，以保证客户程序不会通过new（）操作产生一个实例，达到实现单例的目的；</li>
<li>因为静态变量的生命周期跟整个应用程序的生命周期是一样的，所以可以定义一个私有的静态全局变量instance来保存该类的唯一实例；</li>
<li>必须提供一个全局函数访问获得该实例，并且在该函数提供控制实例数量的功能，即通过if语句判断instance是否已被实例化，如果没有则可以同new（）创建一个实例；否则，直接向客户返回一个实例。</li>
<li>在这种经典模式下，没有考虑线程并发获取实例问题，即可能出现两个线程同时获取instance实例，且此时其为null时，就会出现两个线程分别创建了instance，违反了单例规则。因此，需对上面代码修改。</li>
</ol>
<h3 id="多线程下的单例模式（Lazy模式）"><a href="#多线程下的单例模式（Lazy模式）" class="headerlink" title="多线程下的单例模式（Lazy模式）"></a>多线程下的单例模式（Lazy模式）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public class Singleton</span><br><span class="line">&#123;</span><br><span class="line">       private static Singleton instance;</span><br><span class="line">       private static object _lock=new object();</span><br><span class="line"></span><br><span class="line">       private Singleton()</span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public static Singleton GetInstance()</span><br><span class="line">       &#123;</span><br><span class="line">               if(instance==null)</span><br><span class="line">               &#123;</span><br><span class="line">                      lock(_lock)</span><br><span class="line">                      &#123;</span><br><span class="line">                             if(instance==null)</span><br><span class="line">                             &#123;</span><br><span class="line">                                     instance=new Singleton();</span><br><span class="line">                             &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               return instance;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述代码使用了双重锁方式较好地解决了多线程下的单例模式实现。先看内层的if语句块，使用这个语句块时，先进行加锁操作，保证只有一个线程可以访问该语句块，进而保证只创建了一个实例。再看外层的if语句块，这使得每个线程欲获取实例时不必每次都得加锁，因为只有实例为空时（即需要创建一个实例），才需加锁创建，若果已存在一个实例，就直接返回该实例，节省了性能开销。</p>
<h3 id="饿汉模式-推荐使用"><a href="#饿汉模式-推荐使用" class="headerlink" title="饿汉模式(推荐使用)"></a>饿汉模式(推荐使用)</h3><blockquote>
<p>这种模式的特点是自己主动实例。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public sealed class Singleton</span><br><span class="line">&#123;</span><br><span class="line">        private static readonly Singleton instance=new Singleton();</span><br><span class="line"> </span><br><span class="line">        private Singleton()</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static Singleton GetInstance()</span><br><span class="line">        &#123;</span><br><span class="line">               return instance;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面使用的readonly关键可以跟static一起使用，用于指定该常量是类别级的，它的初始化交由静态构造函数实现，并可以在运行时编译。在这种模式下，无需自己解决线程安全性问题，CLR会给我们解决。由此可以看到这个类被加载时，会自动实例化这个类，而不用在第一次调用GetInstance()后才实例化出唯一的单例对象。</p>
<h3 id="单例模式和静态的区别"><a href="#单例模式和静态的区别" class="headerlink" title="单例模式和静态的区别"></a>单例模式和静态的区别</h3><p>两者达到的效果是一样的，只不过单例模式的扩展性好，使用静态的话就没有面向对象的思想（封装、继承、多态）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;最近在学设计模式，学到创建型模式的时候，碰到单例模式（或叫单件模式），现在整理一下笔记。&lt;/p&gt;
&lt;/blockq
    
    </summary>
    
      <category term="C#" scheme="http://blog.pqpqpq.cn/categories/C/"/>
    
    
      <category term="C#" scheme="http://blog.pqpqpq.cn/tags/C/"/>
    
      <category term="单例" scheme="http://blog.pqpqpq.cn/tags/%E5%8D%95%E4%BE%8B/"/>
    
      <category term="模式" scheme="http://blog.pqpqpq.cn/tags/%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
